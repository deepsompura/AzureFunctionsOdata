
# Action Requires
# 1. Setup the AZURE_CREDENTIALS secrets in your GitHub Repository
# 2. Replace PLEASE_REPLACE_THIS_WITH_YOUR_FUNCTION_APP_NAME with your Azure function app name
# 3. Add this yaml file to your project's .github/workflows/
# 4. Push your local project to your GitHub Repository

name: Windows_Dotnet_Workflow

on:
  push:
    branches:
    - master

env:
  AZURE_RESOURCE_GROUP: deep-functions-rgrp   # set this to your Azure Resource group's name  
  AZURE_RESOURCE_LOCATION: eastus2   # set this to your application's name
  AZURE_STORAGE_ACCOUNT: deepfuncstg03odatazure  # set this to your App service plan's name
  AZURE_FUNCTIONAPP: deep-functions-03-odata-azurefunction

jobs:
  provision:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
            
   # Authentication
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS  }}
    
  # Provision a new Web App
    - name: Azure CLI script to create a new Function App
      uses: azure/CLI@v1
      with:
        azcliversion: latest
        inlineScript: |
          az account show
          az group create --name ${{ env.AZURE_RESOURCE_GROUP }} --location ${{ env.AZURE_RESOURCE_LOCATION }}
          az storage account create --name ${{ env.AZURE_STORAGE_ACCOUNT }} --location ${{ env.AZURE_RESOURCE_LOCATION }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --sku Standard_LRS
          az functionapp create --name ${{ env.AZURE_FUNCTIONAPP }} --storage-account ${{ env.AZURE_STORAGE_ACCOUNT }} --consumption-plan-location ${{ env.AZURE_RESOURCE_LOCATION }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --functions-version 3
          az functionapp deployment slot create --name ${{ env.AZURE_FUNCTIONAPP }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }} --slot preprod --configuration-source  ${{ env.AZURE_FUNCTIONAPP }}
          az functionapp deployment slot auto-swap --slot preprod --auto-swap-slot production --name ${{ env.AZURE_FUNCTIONAPP }} --resource-group ${{ env.AZURE_RESOURCE_GROUP }}
          
  build-and-deploy:
    needs: provision
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master

    # If you want to use publish profile credentials instead of Azure Service Principal
    # Please comment this 'Login via Azure CLI' block
    - name: 'Login via Azure CLI'
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Setup Dotnet 2.2.300
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: '2.2.300'

    - name: 'Run dotnet'
      shell: pwsh
      run: |
        # If your function app project is not located in your repository's root
        # Please change your directory for dotnet build in pushd
        pushd .
        dotnet build --configuration Release --output ./output
        popd
               
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.AZURE_FUNCTIONAPP }}
        slot-name: preprod
        # If your function app project is not located in your repository's root
        # Please consider prefixing the project path in this package parameter
        package: './output'
        # If you want to use publish profile credentials instead of Azure Service Principal
        # Please uncomment the following line
        # publish-profile: ${{ secrets.SCM_CREDENTIALS }}

    #- name: 'use the published functionapp url in upcoming steps'
    #  run: |
    #    echo "${{ steps.fa.outputs.app-url }}"

# For more information on GitHub Actions:
#   https://help.github.com/en/categories/automating-your-workflow-with-github-actions
